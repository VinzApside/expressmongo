<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Express Movies</title>
    <link rel="stylesheet" href="../public/style.css" />
    <link rel="icon" href="data:;base64,=">
</head>


<body>
    <% include ./partials/header %>

    <div class="central">
        <h1>
            <%= title %>
        </h1>
        <br>
        <div id="login">
            <form>
                <legend>Veuillez saisir vos identifiants</legend>
                <label for="email">email</label>
                <input type="text" name="email" id="email">
                <label for="password">mot de passe</label>
                <input type="password" name="password" id="password">
                <button type="submit">connexion</button>
            </form>
        </div>

        <br>
        <div id="profile" style="display:none">
            <button id="display-payload">voir le payload</button>
            <button id="disconnectBtn">déconnexion</button>
            <div id="decoded-payload"></div>
            <div>
                <a href="#" id="member-only">espace membre</a>
                <div id="member-data"></div>
            </div>
        </div>

    </div>

    <footer>
        <% include ./partials/footer %>
    </footer>
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script>
        var form = document.querySelector('form');
        form.addEventListener("submit", loginUser);

        let loginArea = document.querySelector('#login');
        let profileArea = document.querySelector('#profile');

        let displayPayloadBtn = document.querySelector('#display-payload');
        displayPayloadBtn.addEventListener('click', displayPayload)
        let disconnectBtn = document.querySelector('#disconnectBtn');
        disconnectBtn.addEventListener('click', disconnect);
        const connexionLinkArea = document.querySelector('#connectionLink');
        handleFormDisplay();

        const memberOnlyLink = document.querySelector('#member-only');
        memberOnlyLink.addEventListener('click', makeRequestWithToken);

        function loginUser(event) {
            loginUserWithXHR(event)
        }

        function loginUserWithXHR(event) {
            event.preventDefault();
            console.log('loginUserWithXHR');

            // https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/send
            var xhr = new XMLHttpRequest();
            xhr.open("POST", '/login', true);

            //Send the proper header information along with the request
            xhr.setRequestHeader("Content-type", "application/x-www-form-urlencoded");

            xhr.onreadystatechange = function () {//Call a function when the state changes.
                if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {
                    // console.log('xhr', xhr);
                    const token = xhr.response;
                    localStorage.setItem('token', token);
                    switchToLoggedInMode();
                    form.reset();

                }

            }
            var email = document.getElementById('email').value;
            var password = document.getElementById('password').value;
            var payLoad = "email=" + email + "&" + "password=" + password;
            xhr.send(payLoad);
        }

        function handleFormDisplay() {
            if (localStorage.getItem('token')) {
                switchToLoggedInMode();
            } else {
                switchToLoggedOutMode();
            }
        }

        function switchToLoggedInMode() {
            loginArea.style.display = 'none';
            profileArea.style.display = 'block';
            connexionLinkArea.innerHTML = '<a href="/login">déconnexion</a>';
        }

        function switchToLoggedOutMode() {
            loginArea.style.display = 'block';
            profileArea.style.display = 'none'
        }
        function displayPayload() {
            const payload = parseJWT();
            var decodedPayloadDiv = document.querySelector('#decoded-payload');
            decodedPayloadDiv.innerHTML = `<pre>${JSON.stringify(payload)}</pre>`
        }

        function parseJWT() {
            let tokenFromStorage = localStorage.getItem('token')
            if (tokenFromStorage) {
                const base64Payload = tokenFromStorage.split('.')[1];
                return JSON.parse(window.atob(base64Payload));
            }
            else {
                return 'not token to parse';
            }
        }


        function disconnect() {
            switchToLoggedOutMode;
            localStorage.removeItem('token');
            connexionLinkArea.innerHTML = '<a href="/login">connexion</a>';
        }

        function makeRequestWithToken(event) {
            event.preventDefault();
            const page = this.id;
            let tokenFromStorage = localStorage.getItem('token');
            const config = {};

            if (tokenFromStorage) {
                config.headers = { 'Authorization': `Bearer ${JSON.parse(tokenFromStorage)}` }
            }

            axios.get(`http://localhost:3000/${page}`, config).then(res => {
                console.log('success');
                console.log(res);
            }).catch(err => { console.error('makeRequestWithToken err', err) })
        }

    </script>
</body>

</html>